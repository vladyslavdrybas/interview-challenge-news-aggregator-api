{
    "openapi": "3.0.0",
    "info": {
        "title": "Challenge News Aggregator API",
        "description": "The challenge is to build a RESTful API for a news aggregator service that pulls articles from various sources and provides endpoints for a frontend application to consume.",
        "version": "1"
    },
    "servers": [
        {
            "url": "http://localhost:8090/api/v1",
            "description": "Main API"
        }
    ],
    "paths": {
        "/": {
            "get": {
                "tags": [
                    "Home"
                ],
                "summary": "Welcome Message",
                "description": "Returns a welcome message for the API",
                "operationId": "a2d006fc7e9cb6e35d099d5667cebf70",
                "responses": {
                    "200": {
                        "description": "Welcome message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Welcome to the API!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "bearerHttpAuthentication": {
                            "$ref": "#/components/securitySchemes/bearerHttpAuthentication"
                        }
                    }
                ]
            }
        },
        "/auth/password-update": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Update password and issue new token",
                "operationId": "a03a68592fa705594823d9b5c0098565",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password update successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password update successfully."
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "25|GRKiThbSCUPdgA1VDqXXzC6iEk24Ue3gBvFhOQSL0a3c51e5"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                },
                "security": [
                    {
                        "bearerHttpAuthentication": {
                            "$ref": "#/components/securitySchemes/bearerHttpAuthentication"
                        }
                    }
                ]
            }
        },
        "/auth/password-forgot": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Request password reset link",
                "operationId": "1cd4378d99becb951da6387b593de115",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reset link sent successfully."
                    },
                    "404": {
                        "$ref": "#/components/responses/404"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user and issue token",
                "operationId": "8125d49d0f58e1179dfb60017802409f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "8|fV0i6wBom5uU7Kb9DJyeEWoWGio7poo0IKwYP0bYb734cfdc"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user and invalidate token",
                "operationId": "54ebe8761f624404a0619002e3225589",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerHttpAuthentication": {
                            "$ref": "#/components/securitySchemes/bearerHttpAuthentication"
                        }
                    }
                ]
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "8b8642a76b5a34504238066ec89d56d8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/news-authors": {
            "get": {
                "tags": [
                    "Sources"
                ],
                "summary": "Retrieve all news authors with pagination.",
                "operationId": "6badf43ec6c3e9d23a7b931847ab0d86",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved news authors.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "list"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NewsAuthor"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/PaginationInfo"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "bearerHttpAuthentication": {
                            "$ref": "#/components/securitySchemes/bearerHttpAuthentication"
                        }
                    }
                ]
            }
        },
        "/news-categories": {
            "get": {
                "tags": [
                    "Sources"
                ],
                "summary": "Retrieve all news categories with pagination.",
                "operationId": "823b74f4b8c873a6605c403ed602b3da",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved news categories.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "list"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NewsCategory"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/PaginationInfo"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "bearerHttpAuthentication": {
                            "$ref": "#/components/securitySchemes/bearerHttpAuthentication"
                        }
                    }
                ]
            }
        },
        "/news-sources": {
            "get": {
                "tags": [
                    "Sources"
                ],
                "summary": "Retrieve all news sources with pagination.",
                "operationId": "589400fc0e0ee97cc2ed43c5b5a9cc51",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/page"
                    },
                    {
                        "$ref": "#/components/parameters/per_page"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved news sources.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "type": {
                                            "type": "string",
                                            "example": "list"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/NewsSource"
                                            }
                                        },
                                        "pagination": {
                                            "$ref": "#/components/schemas/PaginationInfo"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "bearerHttpAuthentication": {
                            "$ref": "#/components/securitySchemes/bearerHttpAuthentication"
                        }
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "PaginationInfo": {
                "properties": {
                    "current_page": {
                        "type": "integer",
                        "example": 1
                    },
                    "total_pages": {
                        "type": "integer",
                        "example": 10
                    },
                    "total_items": {
                        "type": "integer",
                        "example": 100
                    }
                },
                "type": "object"
            },
            "ForgotPasswordRequest": {
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@example.com"
                    }
                },
                "type": "object"
            },
            "LoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "PasswordUpdateRequest": {
                "required": [
                    "password_current",
                    "password"
                ],
                "properties": {
                    "password_current": {
                        "type": "string",
                        "format": "password",
                        "example": "password"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "newpassword"
                    }
                },
                "type": "object"
            },
            "UserCreateRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "NewsAuthor": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "slug": {
                        "type": "string",
                        "example": "neil-degrasse-tyson"
                    },
                    "full_name": {
                        "type": "string",
                        "example": "Neil deGrasse Tyson"
                    }
                },
                "type": "object"
            },
            "NewsCategory": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "slug": {
                        "type": "string",
                        "example": "it-backend"
                    },
                    "title": {
                        "type": "string",
                        "example": "IT backend"
                    }
                },
                "type": "object"
            },
            "NewsSource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "slug": {
                        "type": "string",
                        "example": "news-api-1"
                    },
                    "title": {
                        "type": "string",
                        "example": "News API 1"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-11-13T13:05:45.000000Z"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "400": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Bad Request"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "401": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Unauthorized"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "403": {
                "description": "Forbidden",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Forbidden"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "404": {
                "description": "Not found",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Not found"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "422": {
                "description": "Unprocessable Entity",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Unprocessable Entity"
                                },
                                "errors": {
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "parameters": {
            "page": {
                "name": "page",
                "in": "query",
                "description": "Page number for pagination",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 1
                }
            },
            "per_page": {
                "name": "per_page",
                "in": "query",
                "description": "Number of items per page",
                "required": false,
                "schema": {
                    "type": "integer",
                    "default": 10
                }
            }
        },
        "securitySchemes": {
            "bearerHttpAuthentication": {
                "type": "http",
                "description": "Bearer api token authentication",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "Bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Home",
            "description": "Home"
        },
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Sources",
            "description": "Sources"
        }
    ]
}