{
    "openapi": "3.0.0",
    "info": {
        "title": "Challenge News Aggregator API",
        "description": "The challenge is to build a RESTful API for a news aggregator service that pulls articles from various sources and provides endpoints for a frontend application to consume.",
        "version": "1"
    },
    "servers": [
        {
            "url": "http://localhost:8090/api/v1",
            "description": "Main API"
        }
    ],
    "paths": {
        "/": {
            "get": {
                "tags": [
                    "Home"
                ],
                "summary": "Welcome Message",
                "description": "Returns a welcome message for the API",
                "operationId": "a2d006fc7e9cb6e35d099d5667cebf70",
                "responses": {
                    "200": {
                        "description": "Welcome message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Welcome to the API!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    }
                },
                "security": [
                    {
                        "bearerHttpAuthentication": {
                            "$ref": "#/components/securitySchemes/bearerHttpAuthentication"
                        }
                    }
                ]
            }
        },
        "/auth/password-reset": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Reset user password and issue new token",
                "operationId": "4eeba56257ba02a295f5357a3e187bdd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "password_current",
                                    "password"
                                ],
                                "properties": {
                                    "password_current": {
                                        "type": "string",
                                        "format": "password"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "newpassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password reset successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Password reset successfully."
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "25|GRKiThbSCUPdgA1VDqXXzC6iEk24Ue3gBvFhOQSL0a3c51e5"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                },
                "security": [
                    {
                        "bearerHttpAuthentication": {
                            "$ref": "#/components/securitySchemes/bearerHttpAuthentication"
                        }
                    }
                ]
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user and issue token",
                "operationId": "8125d49d0f58e1179dfb60017802409f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "8|fV0i6wBom5uU7Kb9DJyeEWoWGio7poo0IKwYP0bYb734cfdc"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        },
        "/auth/logout": {
            "get": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user and invalidate token",
                "operationId": "54ebe8761f624404a0619002e3225589",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Successfully logged out."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerHttpAuthentication": {
                            "$ref": "#/components/securitySchemes/bearerHttpAuthentication"
                        }
                    }
                ]
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "8b8642a76b5a34504238066ec89d56d8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User successfully registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "$ref": "#/components/responses/400"
                    },
                    "401": {
                        "$ref": "#/components/responses/401"
                    },
                    "422": {
                        "$ref": "#/components/responses/422"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "LoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password"
                    }
                },
                "type": "object"
            },
            "PasswordResetRequest": {
                "required": [
                    "password_current",
                    "password"
                ],
                "properties": {
                    "password_current": {
                        "type": "string",
                        "format": "password",
                        "example": "password"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "newpassword"
                    }
                },
                "type": "object"
            },
            "UserCreateRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "johndoe@example.com"
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password"
                    },
                    "password_confirmation": {
                        "type": "string",
                        "format": "password",
                        "example": "password"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "400": {
                "description": "Bad Request",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Bad Request"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "401": {
                "description": "Unauthorized",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Unauthorized"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            },
            "422": {
                "description": "Unprocessable Entity",
                "content": {
                    "application/json": {
                        "schema": {
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "example": "Unprocessable Entity"
                                },
                                "errors": {
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerHttpAuthentication": {
                "type": "http",
                "description": "Bearer api token authentication",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "Bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Home",
            "description": "Home"
        },
        {
            "name": "Auth",
            "description": "Auth"
        }
    ]
}